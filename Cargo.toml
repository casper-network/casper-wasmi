[package]
name = "casper-wasmi"
version = "0.13.2"
edition = "2021"
authors = ["Parity Technologies <admin@parity.io>", "Nikolay Volf <nikvolf@gmail.com>", "Svyatoslav Nikolsky <svyatonik@yandex.ru>", "Sergey Pepyakin <s.pepyakin@gmail.com>", "Micha≈Ç Papierski <michal@casperlabs.io>"]
license = "MIT/Apache-2.0"
readme = "README.md"
repository = "https://github.com/casper-network/casper-wasmi"
documentation = "https://docs.rs/casper-wasmi/"
description = "WebAssembly interpreter"
keywords = ["wasm", "webassembly", "bytecode", "interpreter"]
exclude = [ "/res/*", "/tests/*", "/fuzz/*", "/benches/*" ]

[dependencies]
casper-wasmi-core = { version = "0.2.1", path = "core", default-features = false }
validation = { package = "casper-wasmi-validation", version = "0.5.0", path = "validation", default-features = false }
casper-wasm = { version = "0.46.0", default-features = false, features = ["std", "sign_ext"] }

[dev-dependencies]
assert_matches = "1.5"
wabt = "0.9"
wat = "1"
wast = "44.0"
anyhow = "1.0"
criterion = "0.3.5"

# Required as dev-dependency because otherwise benchmarks
# have trouble using it without `cargo bench --all-features`.
wasmi_v1 = { path = "wasmi_v1" }

[features]
default = ["std"]
# Use `no-default-features` for a `no_std` build.
std = [
    "casper-wasmi-core/std",
    "casper-wasm/std",
    "validation/std",
]
# Enables OS supported virtual memory.
#
# Note
#
# - This feature is only supported on 64-bit platforms.
#   For 32-bit platforms the linear memory will fallback to using the Vec
#   based implementation.
# - The default is to fall back is an inefficient vector based implementation.
# - By nature this feature requires `region` and the Rust standard library.
virtual_memory = ["casper-wasmi-core/virtual_memory", "std"]

reduced-stack-buffer = [ "casper-wasm/reduced-stack-buffer" ]

[workspace]
members = ["validation", "core", "wasmi_v1", "cli"]
exclude = []

[[bench]]
name = "benches"
path = "./benches/benches.rs"
harness = false

[profile.bench]
lto = "fat"
codegen-units = 1
